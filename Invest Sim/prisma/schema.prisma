datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  portfolioID1 String   @unique @default(cuid())
  createdAt    DateTime @default(now())

  accountValue Int @unique
  buyingPower  Int @unique
  cash         Int @unique

  portfolioID Portfolio?
  password    Password?

  buyOrders  BuyOrders[]
  sellOrders SellOrders[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Portfolio {
  user        User   @relation(fields: [portfolioID], references: [portfolioID1], onDelete: Cascade, onUpdate: Cascade)
  portfolioID String @unique
  held        Held   @default(STOCKS)
}

enum Held {
  STOCKS
  QUANTITY
}

model BuyOrders {
  name     String @unique
  quantity Int    @unique

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  marketOrder         MarketOrder? @relation(fields: [marketOrderQuantity], references: [quantity])
  limitOrder          LimitOrder?  @relation(fields: [limitOrderMaxPrice], references: [maxPrice])
  marketOrderPrice    Int?
  limitOrderMaxPrice  Int?
  marketOrderQuantity Int?
}

model SellOrders {
  name     String @unique
  quantity Int    @unique

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  marketOrder         MarketOrder? @relation(fields: [marketOrderQuantity], references: [quantity])
  limitOrder          LimitOrder?  @relation(fields: [limitOrderMaxPrice], references: [maxPrice])
  marketOrderPrice    Int?
  limitOrderMaxPrice  Int?
  marketOrderQuantity Int?
}

model MarketOrder {
  quantity   Int          @unique
  BuyOrders  BuyOrders[]
  SellOrders SellOrders[]
}

model LimitOrder {
  maxPrice   Int          @unique
  minPrice   Int          @unique
  quantity   Int          @unique
  BuyOrders  BuyOrders[]
  SellOrders SellOrders[]
}
